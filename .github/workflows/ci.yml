# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1.1.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
        virtualenvs-path: ~/.venv
    - name: Load cached poetry venv
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.venv
        key: venv-${{ runner.os }}-{{matrix.python-version}}-${{ hashFiles('**/poetry.lock') }}
    - name: Install poetry dependencies if required
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide.
        # Ignore models.py for now, as it's got lots of uber-long lines
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=models.py
        # Now only do models.py, ignoring line length
        poetry run flake8 mate3/sunspec/models.py --ignore=E501 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check black has been run (excluding auto-generated code)
      run: |
        black . --check --exclude='setup.py|models.py'
    - name: Test with pytest
      run: |
        pytest
